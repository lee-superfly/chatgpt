<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chatgpt.ai.dao.ChargeDao">
    <resultMap id="BaseResultMap" type="com.chatgpt.ai.model.Charge">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="pay_method" jdbcType="VARCHAR" property="payMethod"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , user_id, amount, pay_method, `status`, create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ldf..charge
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from ldf..charge
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.chatgpt.ai.model.Charge">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            MariaDB
        </selectKey>
        insert into ldf..charge (
        user_id, amount, pay_method,
        `status`, create_time)
        values (#{
userId,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{payMethod,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.chatgpt.ai.model.Charge">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            MariaDB
        </selectKey>
        insert into ldf..charge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="
userId != null">

                user_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="payMethod != null">
                pay_method,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="
userId != null">
                #{
        userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="payMethod != null">
                #{payMethod,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chatgpt.ai.model.Charge">
        update ldf..charge
        <set>
            <if test="
userId != null">

                user_id = #{
userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chatgpt.ai.model.Charge">
        update ldf..charge
        set user_id     = #{
userId,jdbcType=INTEGER},
            amount      = #{amount,jdbcType=INTEGER},
            pay_method  = #{payMethod,jdbcType=VARCHAR},
            `status`    = #{status,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>